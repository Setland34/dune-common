---
include:
  - project: 'core/ci-config'
    ref: master
    file: 'config/common/master.yml'
  - project: 'core/ci-config'
    ref: master
    file: 'jobs/common/master.yml'

before_script:
  - . /duneci/bin/duneci-init-job

variables:
  DUNECI_TEST_LABELS: quick
  DUNE_TEST_EXPECTED_VC_IMPLEMENTATION: SSE2

debian:10 gcc-7-17--expensive:
  # This image has Vc
  image: registry.dune-project.org/docker/ci/debian:10
  script: duneci-standard-test
  stage: test
  # allow expensive tests
  variables:
    DUNECI_CXXFLAGS: -mavx
    DUNECI_TEST_LABELS: ""
    DUNECI_TOOLCHAIN: gcc-7-17
    DUNE_TEST_EXPECTED_VC_IMPLEMENTATION: AVX
  # require AVX to properly test Vc
  tags: [duneci, "iset:avx"]
  # allowed to fail to e.g. do no hold up a merge when a runner supporting avx
  # is unavailable
  allow_failure: true


debian-11-gcc-9-17-python:
  image: registry.dune-project.org/docker/ci/debian:11
  script: duneci-standard-test
  stage: test
  variables:
    DUNECI_TOOLCHAIN:  gcc-9-17
    # the CMAKE_FLAGS used to build the modules - set python bindings to on
    DUNE_CMAKE_FLAGS:   '-DDUNE_ENABLE_PYTHONBINDINGS=ON'
    # cmake flags we use for all dune module
    DUNECI_CMAKE_FLAGS: $DUNE_CMAKE_FLAGS
    # add some logging output from the python bindings
    DUNE_LOG_LEVEL:     DEBUG
  tags: [duneci]
ubuntu-20.04-clang-10-17-python:
  image: registry.dune-project.org/docker/ci/ubuntu:20.04
  script: duneci-standard-test
  stage: test
  variables:
    DUNECI_TOOLCHAIN: clang-10-17
    # the CMAKE_FLAGS used to build the modules - set python bindings to on
    DUNE_CMAKE_FLAGS:   '-DDUNE_ENABLE_PYTHONBINDINGS=ON'
    # cmake flags we use for all dune module
    DUNECI_CMAKE_FLAGS: $DUNE_CMAKE_FLAGS
    # add some logging output from the python bindings
    DUNE_LOG_LEVEL:     DEBUG
  tags: [duneci]

system-test:
  stage: downstream
  variables:
    CI_BUILD_REF_NAME: $CI_COMMIT_REF_NAME
    DUNECI_TEST_LABELS: ""
  trigger:
    project: infrastructure/dune-nightly-test
    branch: core
    strategy: depend
  allow_failure: true
